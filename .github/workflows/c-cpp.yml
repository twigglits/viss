name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libgsl-dev libtiff-dev libboost-all-dev libhiredis-dev
      - name: Build project
        run: mkdir -p build && cd build && cmake .. && make -j4 && cd ..
      - name: Run C++ comparison tests
        run: cd build && ctest --output-on-failure
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.VISS_CT_TOKEN }}
      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      - name: Build Docker image (latest and versioned)
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest -t ghcr.io/${{ github.repository }}:${{ env.SHORT_SHA }} .
      - name: Push Docker image (latest)
        run: docker push ghcr.io/${{ github.repository }}:latest
      - name: Push Docker image (versioned)
        run: docker push ghcr.io/${{ github.repository }}:${{ env.SHORT_SHA }}

  increment-version:
    name: Increment Version and Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.VISS_RELEASE_TOKEN }}
          default_bump: patch
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VISS_RELEASE_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false